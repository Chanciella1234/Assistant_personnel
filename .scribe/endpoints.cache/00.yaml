## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentification
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Authentification
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Inscription (Envoi du code d’activation)

        Cette route permet à un utilisateur de s’inscrire.  
        Un code d’activation de 6 chiffres sera envoyé par email avant l’activation du compte.
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nom complet de l’utilisateur. Exemple: Alice Dupont'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Adresse email valide et unique. Exemple: alice@example.com'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Mot de passe d’au moins 6 caractères. Exemple: secret123'
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirmation du mot de passe. Exemple: secret123'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      email: qkunze@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
      password_confirmation: consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Compte créé. Vérifiez votre e-mail pour le code d’activation.",
           "user": {
               "id": 1,
               "email": "alice@example.com"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/verify-code
    metadata:
      groupName: Authentification
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Vérification du code d’activation

        Cette route permet à l’utilisateur de valider le code reçu par e-mail.
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Adresse email utilisée lors de l’inscription. Exemple: alice@example.com'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code_activation:
        name: code_activation
        description: 'Code à 6 chiffres reçu par e-mail. Exemple: 123456'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
      code_activation: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Compte activé avec succès. Vous pouvez maintenant vous connecter."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/resend-code
    metadata:
      groupName: Authentification
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Renvoyer un nouveau code d’activation

        Permet à un utilisateur non vérifié de recevoir un nouveau code d’activation.
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Adresse email de l’utilisateur. Exemple: alice@example.com'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Nouveau code envoyé à votre adresse e-mail.",
           "email": "alice@example.com"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Authentification
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Connexion

        Cette route permet à un utilisateur activé de se connecter et de recevoir un jeton d’accès (token Bearer).
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Adresse email de l’utilisateur. Exemple: alice@example.com'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Mot de passe de l’utilisateur. Exemple: secret123'
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: qkunze@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Connexion réussie",
           "access_token": "1|p6cjhD3t2hA2zP5y8kP6a...",
           "token_type": "Bearer",
           "user": {
               "id": 1,
               "name": "Alice Dupont",
               "email": "alice@example.com",
               "role": "client"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Authentification
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Profil utilisateur connecté

        Permet de récupérer les informations de l’utilisateur connecté via le token.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "name": "Alice Dupont",
           "email": "alice@example.com",
           "role": "client"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentification
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Déconnexion

        Supprime le token d’accès actuel.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Déconnexion réussie"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
